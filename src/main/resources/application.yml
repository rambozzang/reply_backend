spring:
  datasource:
    url: jdbc:mariadb://211.45.167.195:13306/woodlabDB
    username: woodlabuser
    password: aaaAAA111!!!
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: true

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  mail:
    host: smtp.gmail.com
    port: 587
    username: codelabtiger@gmail.com
    password: vibz pnsi zbvh sgyr
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID:disabled}
            client-secret: ${KAKAO_CLIENT_SECRET:disabled}
            redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:8080/login/oauth2/code/kakao}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope: profile_nickname, account_email
          google:
            client-id: ${GOOGLE_CLIENT_ID:disabled}
            client-secret: ${GOOGLE_CLIENT_SECRET:disabled}
            redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
            scope: profile, email
          naver:
            client-id: ${NAVER_CLIENT_ID:disabled}
            client-secret: ${NAVER_CLIENT_SECRET:disabled}
            redirect-uri: ${NAVER_REDIRECT_URI:http://localhost:8080/login/oauth2/code/naver}
            authorization-grant-type: authorization_code
            client-name: Naver
            scope: name, email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

jwt:
  secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890123456789012345678901234567890}
  expiration: 86400000 # 24 hours

server:
  port: 8080
  servlet:
    context-path: /api

# CORS configuration for embedded widget
app:
  cors:
    allowed-origins: "${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://localhost:8080,https://*.yourdomain.com}"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  skin:
    directory: /Users/bumkyuchun/work/app/comdeply/frontend/public/comment-widget-skins

# Widget configuration
widget:
  base-url: ${WIDGET_BASE_URL:http://localhost:3000}
  embed-script-url: ${EMBED_SCRIPT_URL:http://localhost:3000/embed.js}

# Comment system configuration
comment:
  max-depth: ${COMMENT_MAX_DEPTH:3} # 최대 댓글 깊이 (1: 댓글만, 2: 댓글+답글, 3: 댓글+답글+답글)
  sort-increment: ${COMMENT_SORT_INCREMENT:1000} # 정렬 번호 증가 단위

# File upload configuration
file:
  upload:
    storage-type: ${FILE_STORAGE_TYPE:cloudflare} # cloudflare or local
    path: ${FILE_UPLOAD_PATH:./uploads}
    max-size: ${FILE_MAX_SIZE:10MB}
    allowed-types: jpg,jpeg,png,gif,webp
    image:
      max-width: 1920
      max-height: 1080
      thumbnail-size: 200

# Cloudflare R2 configuration
cloudflare:
  r2:
    account-id: ${CLOUDFLARE_ACCOUNT_ID:1227ead63607f2c82ce09310ce378241}
    access-key-id: ${CLOUDFLARE_R2_ACCESS_KEY_ID:default}
    secret-access-key: ${CLOUDFLARE_R2_SECRET_ACCESS_KEY:default}
    bucket-name: ${CLOUDFLARE_R2_BUCKET_NAME:comment-attachments}
    region: ${CLOUDFLARE_R2_REGION:auto}
    endpoint: ${CLOUDFLARE_R2_ENDPOINT:https://default.r2.cloudflarestorage.com}
    public-url: ${CLOUDFLARE_R2_PUBLIC_URL:https://pub-d0d30d70e5e3418c9eec4687392c269a.r2.dev}

  # var cloudflare = Cloudflare.basic(apiUrl: 'https://api.cloudflare.com/client/v4');
  # String token = 'POZZTG-V4np3iP8M8vJDscMcgHmiRXjSwFMQ21-9';
  # String accountId = '';
  # String apiKey = 'cd5249e49356cddf0c63d6594905d557dc2e3';
  # String accountEmail = 'tigerbk007@gmail.com';
  # String apiUrl = 'https://api.cloudflare.com/client/v4';

# PortOne (포트원) 결제 시스템 설정
# 실제 사용 시에는 포트원 콘솔에서 발급받은 API 키를 환경변수로 설정하세요:
# export PORTONE_API_KEY="your_actual_api_key"
# export PORTONE_API_SECRET="your_actual_api_secret"
# export PORTONE_STORE_ID="your_store_id"
# export PORTONE_CHANNEL_KEY="your_channel_key"

portone:
  # 고객사 식별코드
  customer-code: "imp85312114"
  # 포트원 콘솔 > 개발 정보에서 확인
  api-key: "4583107352732642"
  api-secret: "AvCjVJRivIAsBOADTFlPlR72MtVhJM2CXbuf3edk5m9dkpvGi7Atx8hUBkTzTsQylWSdX67gW3jvcLgD"
  # 포트원 콘솔 > 상점 관리에서 확인
  store-id: "store-37dfc1b9-5c03-4018-a759-2413922750b0"
  # 포트원 콘솔 > 연동 관리에서 확인
  # 나이스
  channel-key: "channel-key-4779deaf-cb5f-42ec-87d7-61450a936142"
  # 토스
  # channel-key: "channel-key-6a45ea68-457e-4b18-933e-b50bb6aa3282"
  # 포트원 콘솔 > 웹훅에서 설정
  webhook-secret: "여기에_실제_웹훅_시크릿_입력"
  # API 기본 URL (변경하지 마세요)
  base-url: https://api.iamport.kr
  # 테스트 모드 (개발환경에서는 true)
  is-test: true

# 결제 및 구독 설정
payment:
  plans:
    pro:
      id: pro
      name: "Pro 플랜"
      price: 29000
      monthly-comment-limit: 50000
      features:
        - "월 50,000개 댓글"
        - "기본 테마 제공"
        - "이메일 지원"
        - "기본 통계"
    business:
      id: business
      name: "Business 플랜"
      price: 79000
      monthly-comment-limit: 200000
      features:
        - "월 200,000개 댓글"
        - "커스텀 테마 제공"
        - "우선 지원"
        - "고급 통계"
        - "API 액세스"

logging:
  level:
    com.comdeply.comment: debug
    org.springframework.security: debug

# Swagger/OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    doc-expansion: none
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
